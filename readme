1. Historial de asistencia del usuario (finalizado)

    ¿Qué clases tomó? ¿Cuándo? ¿Faltó a alguna?

    → Tabla attendances o registrar automáticamente cuando pasa la clase y el alumno estaba inscripto.

2. Control de inasistencias / penalizaciones (en proceso)

    Por ejemplo, si se inscribió y no asistió, se le descuenta el crédito igual o se lo penaliza tras 3 faltas.

3. Notificaciones o recordatorios (a estimar)

    Recordatorio 1 hora antes de su clase.

    Aviso cuando le quedan pocas clases disponibles.

    Email o push con Expo Notifications si usás React Native.

4. Listado de espera (waitlist)  (en proceso)

    Si la clase está llena, que se puedan anotar en lista de espera.

    Cuando alguien se baja, se asigna al primero en la lista.

5. Dashboard del gimnasio

    ¿Cuántos alumnos activos hay?

    ¿Cuántas clases esta semana? ¿Capacidad ocupada?

    ¿Qué packs son los más vendidos?






9. App móvil para admins / alumnos (frontend)  (a estimar)

    Ya estás con React Native. Buen momento para ofrecer experiencia mobile dedicada.


10. Soporte para múltiples gimnasios (modo SaaS) (a estimar)

    Ya estás cerca: podrías permitir que cada gimnasio administre su base, sus usuarios y horarios.

    Te acercaría a una app como Fitco, SportClub o similares.


11. Estados de la clase, para que el admin pueda suspenderlas por ejemplo. (pendiente, por ahora podemos manejar sin estados)
Lo mismo para usuarios, podemos dar de baja a un usuario, luego de algunas clases sin pagar o anotarse.

12. Trabajo que recorra las fechas de vencimiento de los packs y si es igual a getdate() cambie el estado a 0 (vencido)     finalizado (en pruebas)


13. Ruta que traiga los user_packs de cada usuario (finalizado)

Detalles: 

Ver Funcion GetPackUsage y CountUsedClasses en el servicio calendar_service (podemos reutilizar una funcion dentro de otra al contar las clases inscriptas de un alumno) (terminado)






14. Tareas nuevas (22/07/2025)

    - Agregar estado en usuarios y clases(suspendido <> eliminado, activo)
    - Al crear el user_pack evaluar la posibilidad de agregar mas de una disciplina por usuario
    - En carga masiva de clases probar los templates y que se puedan editar 
    - diferenciar paquetes de planes(plan = pack) paquete son clases sueltas con fecha de vencimiento(crear tabla plan)